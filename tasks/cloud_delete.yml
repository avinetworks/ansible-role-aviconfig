# Automatically Generated File
# Copyright Avi Networks
---

  - name: Avi Config | Fetch cloud status before deletion
    avi_api_session:
      controller: "{{ avi_controller | default(omit) }}"
      username: "{{ avi_username  | default(omit) }}"
      password: "{{ avi_password  | default(omit) }}"
      api_version: "{{ api_version | default(omit) }}"
      avi_credentials: "{{ avi_credentials | default(omit) }}"
      http_method: get
      path: "cloud-inventory"
      params:
        name: "{{ item.name }}"
    with_items: "{{ avi_role_cfg.cloud | default([]) }}"
    register: cloud_res

  - name: Avi Cloud | Delete Cloud
    no_log: "{{ avi_role_config_log_mode | default(False)}}"
    avi_cloud:
      controller: "{{ avi_controller | default(omit) }}"
      username: "{{ avi_username | default(omit) }}"
      password: "{{ avi_password | default(omit) }}"
      tenant: "{{ item.tenant | default(omit) }}"
      api_version: "{{ api_version | default(omit) }}"
      avi_credentials: "{{ avi_credentials | default(omit) }}"
      api_context: "{{ avi_api_context | default(omit) }}"
      state: "{{ avi_role_state_mode }}"
      avi_api_update_method: "{{ item.avi_api_update_method | default(omit) }}"
      avi_api_patch_op: "{{ item.avi_api_patch_op | default(omit) }}"
      apic_configuration: "{{ item.apic_configuration | default(omit) }}"
      apic_mode: "{{ item.apic_mode | default(omit) }}"
      autoscale_polling_interval: "{{ item.autoscale_polling_interval | default(omit) }}"
      aws_configuration: "{{ item.aws_configuration | default(omit) }}"
      azure_configuration: "{{ item.azure_configuration | default(omit) }}"
      cloudstack_configuration: "{{ item.cloudstack_configuration | default(omit) }}"
      custom_tags: "{{ item.custom_tags | default(omit) }}"
      dhcp_enabled: "{{ item.dhcp_enabled | default(omit) }}"
      dns_provider_ref: "{{ item.dns_provider_ref | default(omit) }}"
      dns_resolution_on_se: "{{ item.dns_resolution_on_se | default(omit) }}"
      docker_configuration: "{{ item.docker_configuration | default(omit) }}"
      east_west_dns_provider_ref: "{{ item.east_west_dns_provider_ref | default(omit) }}"
      east_west_ipam_provider_ref: "{{ item.east_west_ipam_provider_ref | default(omit) }}"
      enable_vip_static_routes: "{{ item.enable_vip_static_routes | default(omit) }}"
      gcp_configuration: "{{ item.gcp_configuration | default(omit) }}"
      ip6_autocfg_enabled: "{{ item.ip6_autocfg_enabled | default(omit) }}"
      ipam_provider_ref: "{{ item.ipam_provider_ref | default(omit) }}"
      license_tier: "{{ item.license_tier | default(omit) }}"
      license_type: "{{ item.license_type | default(omit) }}"
      linuxserver_configuration: "{{ item.linuxserver_configuration | default(omit) }}"
      mesos_configuration: "{{ item.mesos_configuration | default(omit) }}"
      mtu: "{{ item.mtu | default(omit) }}"
      name: "{{ item.name | default(omit) }}"
      nsx_configuration: "{{ item.nsx_configuration | default(omit) }}"
      obj_name_prefix: "{{ item.obj_name_prefix | default(omit) }}"
      openstack_configuration: "{{ item.openstack_configuration | default(omit) }}"
      oshiftk8s_configuration: "{{ item.oshiftk8s_configuration | default(omit) }}"
      prefer_static_routes: "{{ item.prefer_static_routes | default(omit) }}"
      proxy_configuration: "{{ item.proxy_configuration | default(omit) }}"
      rancher_configuration: "{{ item.rancher_configuration | default(omit) }}"
      se_group_template_ref: "{{ item.se_group_template_ref | default(omit) }}"
      state_based_dns_registration: "{{ item.state_based_dns_registration | default(omit) }}"
      tenant_ref: "{{ item.tenant_ref | default(omit) }}"
      uuid: "{{ item.uuid | default(omit) }}"
      vca_configuration: "{{ item.vca_configuration | default(omit) }}"
      vcenter_configuration: "{{ item.vcenter_configuration | default(omit) }}"
      vtype: "{{ item.vtype | default(omit) }}"
    when:
      - (item.name | length > 0)
      - (not (item.system_default | default(false)))
      - (avi_config_state == "absent" or avi_role_state_mode == "absent")
      - (item.state | default("present") == avi_role_state_mode or avi_config_state == "absent")
      - cloud_res.results[0] is defined
      - cloud_res.results[0].obj is defined
      - cloud_res.results[0].obj.count != 0
    with_items: "{{ avi_role_cfg.cloud | default([]) }}"
